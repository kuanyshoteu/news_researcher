version: "3.9"

services:
  db:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_password    # замени
      POSTGRES_DB: app
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: ./backend
    container_name: api
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+psycopg://app:app_password@db:5432/app
      API_SECRET: change_me   # замени
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api
    networks:
      - backend

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  backend:
    driver: bridge
